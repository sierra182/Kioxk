@using System.IO
@using System.Net.Http
@using System.Threading
@inject HttpClient Http
@inject IJSRuntime js;

<div id="carreph" class="carre" onclick="scaler('photos','carreph','carre2ph','25','0','-25','25')">
    <div id="carre2ph" class="carre2" />
</div>

<span>
    Nos Photos
</span>

@*@{
    string p_unit;
    if (!sw_limit)
    {
        p_unit = $"{phsw}px";
    }
    else
    {
        p_unit = $"{phm}%";
    }
}*@

<div>
    <div id="contPhAloneJs" draggable="false" @onmousedown="(s)=>OnDown(s)" @onmousemove="(s)=>OnMove(s)" @onmouseup="OnUp" @onmouseout="OnUp" style="--phpc:@phpc; --phpx:@phpx; --qte_ph:@qtph">
        @for (int i = 0; i < qtph; i++)
        {
            string s = $"photo/maison{i}.jpg";
            string l = $"photo/legend/legend{i}.html";
            <div class="contPhMultJs">
                <img draggable="false" src="@s" />
                <div class="contIfraJs">
                    <iframe src="@l" />
                </div>
            </div>
        }
    </div>
</div>

@{
    string t1 = $"{trb}%";
    string t2 = $"{trn}%";
}
<div style="--triremplnext:@t1;--triremplback:@t2">

    <svg @onclick="OnBack"
         data-src="/svg/tri.svg"
         id="mytriback"
         data-js="enabled"
         data-unique-ids="disabled"></svg>

    <svg @onclick="OnNext"
         data-src="/svg/tri.svg"
         id="mytrinext"
         data-js="enabled"
         data-unique-ids="disabled"></svg>
</div>

@code {

    int srcJpg = 0;
    int qtph = 0;
    async Task QtePh()
    {
        qtph = await Http.GetFromJsonAsync<int>("api/commande/GetQtePh");
        c.WriteLine("PHOTO QTEPH: ");
        c.WriteLine(qtph);
    }

    protected override async Task OnInitializedAsync()
    {
        await QtePh();

    }

    double prim_x;
    void OnDown(MouseEventArgs e)
    {
        c.WriteLine("OnDown deb : primx : " + prim_x);
        prim_x = e.ScreenX;
        c.WriteLine("OnDown fin : primx : " + prim_x);
    }

    void OnUp()
    {
        //   c.WriteLine("OnUp deb : primx : " + prim_x + " phsw: " + phsw);
        //  prim_x = 0;
        phpx = 0;
        //   c.WriteLine("OnUp fin + primx + phsw: " + prim_x + " " + phsw);
    }

    double new_x;
    double diff;
    double phpc;
    double phpx;
    bool sw_pass;
    void OnMove(MouseEventArgs e)
    {
        //c.WriteLine("OnMove deb + primx + phsw + diff + newx : " + prim_x + " " + phsw + " " + diff + " " + new_x);
        if (e.Buttons == 1)
        {
            if (!sw_pass)
            {
                new_x = e.ScreenX;
                diff = new_x - prim_x;
                phpx += diff;
                prim_x = new_x;
            }
            if(phpx > 150)
            {
                sw_pass = true;
                OnBack();
            }
            else if ( phpx < -150)
            {
                sw_pass = true;
                OnNext();
            }
            //if (phsw > 100)
            //{
            //    sw_limit = true;
            //    OnBack();
            //    c.WriteLine("STOP");
            //}
            // if (phsw < -280) 
            //{
            //    sw_limit = true;
            //    OnNext();
            //}
            //else
            //{
            //    sw_limit = false;
            //}
            //c.WriteLine("OnMove fin + primx + phsw + diff + newx: " + prim_x + " " + phsw + " " + diff + " " + new_x);

        }

    }

    void OnNextSwipe() 
    {

    }

    void OnBackSwipe()
    {

    }

    int trb = 0;
    int trn = 0;
    int phm = 0;
    async Task OnNext()
    {    
        if (srcJpg < qtph - 1)
        {
            srcJpg++;
            trn += (100 / qtph);
            phpc -= (100 / qtph);
            phpx = 0;
        }
        await Task.Delay(500);
        sw_pass = false;
    }

   async Task OnBack()
    {                                                                           
        if (srcJpg > 0)
        {
            srcJpg--;
            trn -= (100 / qtph);
            phpc += (100 / qtph);
            phpx = 0;
        }
        await Task.Delay(500);
        sw_pass = false;
    }


}
