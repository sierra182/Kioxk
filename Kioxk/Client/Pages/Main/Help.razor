@inject MyEvents myEvents
@using Kioxk.Client.Pages.Main.Agenda

<div>
    <h1>
        HELP
    </h1>

    <div>
        Cliquez sur un jour du calendrier pour sélectionner ou déselectionner une date.
    </div>

    <div>
        <div>
            <Element DateTime="@ldt1" UnSelectable="true" Selected="null" Seasons="@ls1" />
        </div>
        <span> jour actuel </span>

    </div>

    <div>
        <div>
            <Element DateTime="@ldt2" UnSelectable="true" Selected="null" Seasons="@ls2" />
        </div>
        <span> jour non disponible </span>

    </div>

    <div>
        <div>
            <Element DateTime="@ldt3" UnSelectable="false" Selected="null" Seasons="@ls3" />
        </div>
        <span> jour disponible </span>

    </div>

    <div>
        <div>
            <Element DateTime="@ldt4" UnSelectable="false" Selected="true" Seasons="@ls4" />
        </div>
        <span> jour selectionné </span>

    </div>

    <div>
        <div>
            <Element DateTime="@ldt5" UnSelectable="false" Selected="null" Seasons="@ls5" />
        </div>
        <span> jour au tarif moyenne saison </span>

    </div>

    <div>
        <div>
            <Element DateTime="@ldt6" UnSelectable="false" Selected="null" Seasons="@ls6" />
        </div>
        <span> jour au tarif haute saison </span>

    </div>

</div>

@code {

    DateTime ldt1 = DateTime.Now.Date;
    bool?[] ls1 = new bool?[2] { false, false };

    DateTime ldt2 = new DateTime(2022, 11, 01);
    bool?[] ls2 = new bool?[2] { false, false };

    DateTime ldt3 = new DateTime(2022, 11, 01);
    bool?[] ls3 = new bool?[2] { false, false };

    DateTime ldt4 = new DateTime(2022, 11, 1);
    bool?[] ls4 = new bool?[2] { false, false };

    DateTime ldt5 = new DateTime(2022, 11, 1);
    bool?[] ls5 = new bool?[2] { true, false };

    DateTime ldt6 = new DateTime(2022, 11, 1);
    bool?[] ls6 = new bool?[2] { false, true };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        AddSubscriptionUpdateEvent();
    }

    private void AddSubscriptionUpdateEvent() =>
        myEvents.HelpUpdate += Update;

    private void RemoveSubscriptionUpdateEvent() =>
        myEvents.HelpUpdate -= Update;

    private void Update()
    {        
        RemoveSubscriptionUpdateEvent();
        StateHasChanged();
    }
}