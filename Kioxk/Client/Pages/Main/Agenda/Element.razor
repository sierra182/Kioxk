@inject MyEvents myEvents
@inject IJSRuntime js

<div id="elementContainer" style="background:@colorday;border-color:@borderColor">
    @if (Selected ?? false || UnSelectable is not null)
    {
        <span id="daySpan" style="color: @fontDaycolor">@DateTime.Day</span>
    }

    <div id="elementContainerPhantom" @ref="myElementReference"
         @ontouchstart="OnTouchStart"        
         @onmousedown="OnMouseDown"
         @onmousemove="OnMouseMove"
         @onclick="OnClick"/> 
</div>

@code {

    [Parameter]
    public EventCallback OnTouchStart { get; set; }    
    [Parameter]
    public EventCallback OnTouchMove { get; set; }
    [Parameter]
    public EventCallback OnMouseDown { get; set; }
    [Parameter]
    public EventCallback<MouseEventArgs> OnMouseMove { get; set; }
    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public DateTime DateTime { get; set; }
    [Parameter]
    public EventCallback<DateTime> DateTimeChanged { get; set; }
    [Parameter]
    public bool? UnSelectable { get; set; }
    [Parameter]
    public EventCallback<bool?> UnSelectableChanged { get; set; }
    [Parameter]
    public bool? Selected { get; set; }
    [Parameter]
    public EventCallback<bool?> SelectedChanged { get; set; }
    [Parameter]
    public bool?[]? Seasons { get; set; }
    [Parameter]
    public EventCallback<bool?[]> SeasonsChanged { get; set; }

    string? colorday;
    string? borderColor;
    string? fontDaycolor;
    bool livretFirstRender = true;

    protected override void OnParametersSet()
    {
        colorday = "mediumspringgreen;";// "mediumspringgreen";
        borderColor = "rgba(0, 0, 0, .2);";//"mediumspringgreen";
        fontDaycolor = "white;";

        if (myEvents.Livret is not null || !livretFirstRender)
        {
            livretFirstRender = true;

            if (Selected ?? false)
            {
                colorday = "gold;";//"#0081CF";                               // Selectionné
                borderColor = "rgba(0, 0, 0, .2);";// "#0081CF";
            }
            else
            {
                if (Seasons is not null)
                {
                    if (Seasons[0] is true)
                        colorday = "violet";

                    if (Seasons[1] is true)
                        colorday = "darkmagenta";
                }

                if (UnSelectable is true)
                {
                    colorday = "rgba(0,0,0,.4);";                        // Impossible
                    borderColor = "rgba(0,0,0,.4);";
                    fontDaycolor = "rgba(0,0,0,.5);";
                }
            }
            if (DateTime.Now.Date == DateTime)
            {                                                                // Met en évidence le jour actuel.
                colorday = "orange";
                borderColor = "orange";
            }

            if (UnSelectable is null)
            {
                colorday = "transparent";
                borderColor = "white";
            }
        }
        else
        {
            colorday = "rgba(0,0,0,.4);";                        // Pas de Livret
            borderColor = "rgba(0,0,0,.4);";
            fontDaycolor = "rgba(0,0,0,.5);";
        }
    }

    ElementReference myElementReference;
    protected override async Task OnAfterRenderAsync(bool fr)
    {
        if (fr)      
            await js.InvokeVoidAsync("subscriptionOnTouch", DotNetObjectReference.Create(this), myElementReference );    
    }

    [JSInvokable]
    public void RiseEventCallBack()
    {      
        _ = OnTouchMove.InvokeAsync();
    }
      
}
